{"version":3,"sources":["images/food2.jpg","images/logo.svg","RestoData.jsx","Preview.jsx","RestoList.jsx","Common.jsx","CreateResto.jsx","Navbar.jsx","Footer.jsx","EditResto.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","RestoData","name","phone","email","city","desc","dishes","useStyles","makeStyles","theme","typography","padding","spacing","root","maxWidth","width","media","height","paddingTop","avatar","backgroundColor","red","Preview","props","useState","data","dish","classes","React","anchorEl","setAnchorEl","open","Boolean","id","undefined","Button","className","aria-describedby","onClick","event","currentTarget","Popover","onClose","anchorOrigin","vertical","horizontal","transformOrigin","Typography","Card","CardHeader","Avatar","aria-label","title","subheader","CardMedia","image","static_food_img","CardContent","variant","color","component","map","val","RestoList","index","key","exact","to","list","fullList","Common","newState","restoName","details","state","setState","left","drawerState","setdrawerState","toggleDrawer","anchor","type","heading","menuButton","Fragment","SwipeableDrawer","onOpen","clsx","role","onKeyDown","List","ListItem","button","placeholder","onChange","onChangeDish","value","dishValue","onAddDish","dishArray","ItemsList","style","marginLeft","onRemove","onSubmit","submit","InpEvent","rows","Snackbar","message","buttonToggle","CreateResto","setData","dishvalue","setDishvalue","setDish","target","oldItems","alert","filter","arrElem","preVal","e","preventDefault","push","console","log","Navbar","src","logo","alt","loading","data-toggle","data-target","aria-controls","aria-expanded","aria-current","activeClassName","Footer","EditResto","restoId","useParams","datanew","App","path","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.a90e389f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/food2.ea0b3892.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.9c349ff5.svg\";","\nconst RestoData = [\n    {\n        name:\"Resturaunt1\",\n        phone:\"1234567899\",\n        email:\"resto1@gmail.com\",\n        city:\"Ludhiana\",\n        desc:\"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt.\",\n        dishes:[[\"dosa\", \"sambhar\"]]\n    },\n    {\n        name:\"Resturaunt2\",\n        phone:\"1234567899\",\n        email:\"resto2@gmail.com\",\n        city:\"Amritsar\",\n        desc:\"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt.\",\n        dishes:[[\"matar paneer\", \"shahi paneer\"]]\n    },\n    {\n        name:\"Resturaunt3\",\n        phone:\"1234567899\",\n        email:\"resto3@gmail.com\",\n        city:\"Udaipur\",\n        desc:\"Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Donec quam felis, ultricies nec, pellentesque eu, pretium quis, sem. Nulla consequat massa quis enim. Donec pede justo, fringilla vel, aliquet nec, vulputate eget, arcu. In enim justo, rhoncus ut, imperdiet a, venenatis vitae, justo. Nullam dictum felis eu pede mollis pretium. Integer tincidunt.\",\n        dishes:[[\"burger\", \"hakka noodles\"]]\n    },\n];\n\nexport default RestoData;","import React,{useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport { red } from '@material-ui/core/colors';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport static_food_img from '../src/images/food2.jpg'\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n  },\n  root: {\n    maxWidth: 700,\n    width:700,\n  },\n  media: {\n    height: 0,\n    paddingTop: '45.90%', // 16:9\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\n const Preview = (props) => {\n\n  const [dish, setdish] = useState(props.data.dishes[0]);\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n\n\n  return (\n    <div>\n      <Button className=\"button-blue\" aria-describedby={id} onClick={handleClick}>\n      <VisibilityIcon/>\n      </Button>\n      <Popover\n        id={id}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'left',\n        }}\n        transformOrigin={{\n          vertical: 'bottom',\n          horizontal: 'right',\n        }}\n      >\n      <Typography className={classes.typography}>\n          <Card className={classes.root}>\n      <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\n            R\n          </Avatar>\n        }\n        title={props.data.name}\n        subheader={props.data.city}\n      />\n      <CardMedia\n        className={classes.media}\n        image={static_food_img}\n        title={props.data.name}\n      />\n      <CardContent>\n        <h6> Phone Number : {props.data.phone}</h6>\n        <h6> Email Id : {props.data.email}</h6>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {props.data.desc}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        <h6> Menu : </h6>\n        </Typography>\n        {dish.map((val)=>{\n          return <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          <li>{val}</li>\n        </Typography>\n        })}\n        \n      </CardContent>\n    </Card>\n        </Typography>\n      </Popover>\n    </div>\n  );\n}\n\nexport default Preview;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport RestoData from './RestoData';\nimport Button from '@material-ui/core/Button';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Preview from './Preview';\n\nconst RestoList = () =>{\n\n\n    return(\n        <div className=\"main-div\">\n            <div className='table-row-main-div table-main-header'>\n                <div className=\"container-fluid table-row-child-div table-header\">\n                    <table>\n                        <tr>\n                            <td>Name</td>\n                            <td>Phone Number</td>\n                            <td >Email ID</td>\n                            <td>City</td>\n                            <td >Actions</td>\n                        </tr>\n                    </table>\n                    \n                </div>\n            </div> \n            {RestoData.map((val,index)=>{\n                return ( \n                    <div className='table-row-main-div' key={index}>\n                        <div className=\"container-fluid table-row-child-div\">\n                            <table>\n                                <tr>\n                                    <td >{val.name}</td>\n                                    <td >{val.phone}</td>\n                                    <td >{val.email}</td>\n                                    <td >{val.city}</td>\n                                    <td >\n                                        <NavLink exact  to={`/editResto/${index}/`}>\n                                            <Button className='button-blue'><EditIcon/></Button>\n                                        </NavLink>\n                                            <Button><Preview data={val}/></Button>\n                                    </td>\n                                </tr>\n                            </table>\n                            \n                        </div>\n                    </div> \n                )\n            })}\n        </div>\n    )\n}\n\nexport default RestoList;","import React,{useState} from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst useStyles = makeStyles({\n    list: {\n      width: 300\n    },\n    fullList: {\n      width: \"auto\"\n    }\n  });\n\nconst Common = (props) =>{\n\n    const [state, setState] = useState({\n        open: false,\n        vertical: 'top',\n        horizontal: 'center',\n        restoName: props.details.name\n      });\n    \n      const { vertical, horizontal, open, restoName } = state;\n    \n      const handleClick = (newState) => () => {\n        if(props.details.name !== \"\"){ \n            setState({ open: true, ...newState });\n        }\n      };\n    \n      const handleClose = () => {\n        setState({ ...state, open: false });\n      };\n\n      const classes = useStyles();\n        const [drawerState, setdrawerState] = React.useState({\n            left: false\n        });\n\n        const toggleDrawer = (anchor, open) => (event) => {\n            if (\n            event &&\n            event.type === \"keydown\" &&\n            (event.key === \"Tab\" || event.key === \"Shift\")\n            ) {\n            return;\n            }\n\n            setdrawerState({ ...drawerState, [anchor]: open });\n        };\n\n        const list = (anchor) => (\n            <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === \"left\"\n            })}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n            >\n            <List>\n                <ListItem button>\n                    <div className=\"mb-3\">\n                        <label className=\"form-label\">Dishes</label>\n                        <div className=' d-flex justify-content-start'>\n                            <div>\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Add a Dish\" onChange={props.onChangeDish} value={props.dishValue}/>\n                            </div>\n                            <div>\n                            <Button onClick={props.onAddDish} className='button-green'><AddIcon/></Button>\n                            </div>\n                        </div>\n                         {props.dishArray.map((ItemsList,index)=>{\n                            return(\n                            <div id={index} key={index} className=' d-flex justify-content-start mt-3'>\n                                <div style={{marginLeft:\"-15px\"}}>\n                                    <Button onClick={()=>{props.onRemove(index)}} className=\"button-red\">\n                                        <DeleteIcon />\n                                    </Button>\n                                </div>\n                                <div className='ml-3'>\n                                    <li>{ItemsList}</li>\n                                </div>\n                            </div>\n                            )\n                        }) } \n                        </div>  \n                </ListItem>\n            </List>\n            </div>\n        );\n\n    return(\n        <>\n            <div className='my-6 common-header-css'>\n                <h1 className='text-center'>{props.heading}</h1>\n                <div className=\"col-8 button-menu\">\n                    {[props.menuButton].map((anchor) => (\n                        <React.Fragment key={anchor}>\n                        <button className=\"btn btn-outline-primary\" onClick={toggleDrawer(\"left\", true)}>{anchor}</button>\n                        <SwipeableDrawer\n                            anchor=\"left\"\n                            open={drawerState[\"left\"]}\n                            onClose={toggleDrawer(\"left\", false)}\n                            onOpen={toggleDrawer(\"left\", true)}\n                        >\n                            {list(anchor)}\n                        </SwipeableDrawer>\n                        </React.Fragment>\n                    ))}\n                </div>\n                <div className='container contact_div'>\n                    <div className='row'>\n                        <div className='col-md-6 col-10 mx-auto my-3'>\n                            <form onSubmit={props.submit}>\n                                <div className=\"mb-3\">\n                                    <label className=\"form-label\">Full Name</label>\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\"  name='name' value={props.details.name} onChange={props.InpEvent} placeholder=\"Enter name\"/>\n                                </div>\n                                <div className=\"mb-3\">\n                                    <label className=\"form-label\">Phone</label>\n                                    <input type=\"number\" className=\"form-control\" id=\"exampleFormControlInput1\" name='phone' value={props.details.phone} onChange={props.InpEvent} placeholder=\"Enter number\"/>\n                                </div>\n                                <div className=\"mb-3\">\n                                    <label className=\"form-label\">Email address</label>\n                                    <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" name='email' value={props.details.email} onChange={props.InpEvent} placeholder=\"Enter email id\"/>\n                                </div>\n                                <div className=\"mb-3\">\n                                    <label className=\"form-label\">City</label>\n                                    <input type=\"text\" className=\"form-control\" id=\"exampleFormControlInput1\" name='city' value={props.details.city} onChange={props.InpEvent} placeholder=\"Enter city\"/>\n                                </div>\n                                <div className=\"mb-3\">\n                                    <label className=\"form-label\">Description</label>\n                                    <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\" name='desc' value={props.details.desc} onChange={props.InpEvent}></textarea>\n                                </div>\n                                <div className=\"col-8\">\n                                    <button className=\"btn btn-outline-primary\" type=\"submit\" onClick={handleClick({ vertical: 'bottom', horizontal: 'left',restoName: `${props.details.name}`})}>{props.button}</button>\n                                    <Snackbar\n                                    anchorOrigin={{ vertical, horizontal }}\n                                    open={open}\n                                    onClose={handleClose}\n                                    message={`${restoName} ${props.buttonToggle}`}\n                                    key={vertical + horizontal}\n                                    />\n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Common;","import React, { useState } from 'react';\nimport RestoData from './RestoData';\nimport Common from './Common';\n\nconst CreateResto = () =>{\n\n    const [data,setData] = useState({\n            name:\"\",\n            phone:\"\",\n            email:\"\",\n            city:\"\",\n            desc:\"\",\n            dishes:[],\n    });\n\n    const [dishvalue,setDishvalue] = useState(\"\");\n    const [dish,setDish] = useState([]);\n\n    const inputDish =(event)=>{\n        setDishvalue( event.target.value);\n    }\n\n    const ListOfDish =()=>{\n        if(dishvalue !== \"\"){\n            setDish((oldItems)=>{\n                return [...oldItems, dishvalue];\n            });\n            setDishvalue(\"\");\n        }\n        else{\n            alert(\"Dish name cannot be empty\");\n        }\n    }\n\n    const removeDish = (id)=>{\n        setDish((oldItems)=>{\n            return oldItems.filter((arrElem,index)=>{\n                return index!==id;\n            });\n        })\n    } \n\n    const InpEvent = (event)=>{\n        const {name,value} = event.target;\n        setData((preVal)=>{\n            return{\n                ...preVal,\n                [name]:value,\n            }\n        })\n    }\n\n    const formSubmit = (e) =>{\n        e.preventDefault();\n        if(data.name === \"\"){\n            alert(\"Kindly fill atleast name of the restaurant\");\n        } \n        else{\n            data.dishes.push(dish);\n            console.log(RestoData[0]);\n            console.log(data);\n            RestoData.push(data);\n            setData(()=>{\n                return{\n                    name:\"\",\n                    phone:\"\",\n                    email:\"\",\n                    city:\"\",\n                    desc:\"\"\n                }\n            })\n            setDish([]);\n        }\n    }\n\n    return(\n        <>\n            <Common details={data} dishValue={dishvalue} onChangeDish={inputDish} onAddDish={ListOfDish} dishArray={dish} onRemove={removeDish} heading=\"Create New Restaurant\" button=\"Add Restaurant\" menuButton=\"Add Menu\" buttonToggle=\"added Successfully\" InpEvent={InpEvent} submit={formSubmit}/>\n        </>\n    )\n}\n\nexport default CreateResto;","import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport logo from '../src/images/logo.svg'\n\nconst Navbar = () =>{\n    return(\n        <>\n         <div className='container-fluid nav_bg'>\n            <div className='row'>\n                <div className='col-10 mx-auto'>\n                    <nav className=\"navbar navbar-expand-lg navbar-light\">\n                        <div className=\"container-fluid\">\n                            <NavLink className=\"navbar-brand\"to=\"/\" exact>\n                            <div className='header-img'>\n                            <img src={logo} className=\"img-fluid animate d-inline-block align-top\" alt=\"\" loading=\"lazy\"/>\n                            <div className='logo-header'>Restaurant & Menu</div>\n                            </div>\n                            </NavLink>\n                            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                            </button>\n                            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                            <ul className=\"navbar-nav ml-auto mb-2 mb-lg-0\">\n                                <li className=\"nav-item\">\n                                <NavLink className=\"nav-link\" aria-current=\"page\" activeClassName='menu_active' to=\"/\" exact>Restaurant List</NavLink>\n                                </li>\n                                <li className=\"nav-item ml-3\">\n                                <NavLink className=\"nav-link\" activeClassName='menu_active' to=\"/createResto\" exact><button className=\"btn btn-outline-primary\">Create New Restaurant</button></NavLink>\n                                </li>\n                            </ul>\n                            </div>\n                        </div>\n                    </nav>\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Navbar;","import React from 'react';\n\nconst Footer = ()=>{\n    return(\n        <>\n            <footer className='w-100 mb-1 bg-light text-center'>\n                <p>©️ 2020 Restaurant & Menu. All Rights Reserved | Terms and Conditions</p>\n            </footer>\n        </>\n    )\n}\n\nexport default Footer;","import React,{useState} from 'react';\nimport {useParams} from 'react-router-dom';\nimport RestoData from './RestoData';\nimport Common from './Common'\n\nconst EditResto = () =>{\n\n    const {restoId} = useParams();\n    const [data,setData] = useState(RestoData[restoId]);\n\n    const [dishvalue,setDishvalue] = useState(\"\");\n    const [dish,setDish] = useState(data.dishes);\n\n    const inputDish =(event)=>{\n        setDishvalue( event.target.value);\n    }\n\n    const ListOfDish =()=>{\n        if(dishvalue !== \"\"){\n            setDish(()=>{\n                return data.dishes[0].push(dishvalue);\n            });\n            setDishvalue(\"\");\n        }\n        else{\n            alert(\"Dish name cannot be empty\");\n        }\n    }\n\n    const removeDish = (id)=>{\n        let datanew = data.dishes;\n        setDish((datanew)=>{\n            console.log(datanew);\n            return datanew.filter((arrElem,index)=>{\n                console.log(datanew);\n                return index!==id;\n                \n            });\n            \n        })\n    } \n\n\n    const InpEvent = (event)=>{\n        const {name,value} = event.target;\n        setData((preVal)=>{\n            return{\n                ...preVal,\n                [name]:value,\n            }\n        })\n        setDish(dish);\n    }\n    \n    const formSubmit = (e) =>{\n        e.preventDefault();\n        RestoData[restoId] = data;\n    }\n\n    return(\n         <Common details={data} dishValue={dishvalue} onChangeDish={inputDish} onAddDish={ListOfDish} dishArray={data.dishes[0]} onRemove={removeDish} heading=\"Edit Restaurant\" button=\"Save Changes\" menuButton=\"Edit Menu\" buttonToggle=\"Edited Successfully\" InpEvent={InpEvent} submit={formSubmit}/>\n    )\n}\n\nexport default EditResto;","import React from 'react';\nimport {Route,Switch,Redirect} from 'react-router-dom';\nimport RestoList from './RestoList';\nimport CreateResto from './CreateResto';\nimport Navbar from './Navbar';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/js/bootstrap.bundle';\nimport './index.css';\nimport Footer from './Footer';\nimport EditResto from './EditResto';\n\nfunction App() {\n  return (\n    <>\n      <Navbar/>\n      <Switch>\n        <Route exact path='/' component={RestoList}/>\n        <Route exact path='/createResto' component={CreateResto}/>\n        <Route exact path='/editResto/:restoId/' component={EditResto}/>\n        <Redirect to='/'/>\n      </Switch><br/><br/>\n      <Footer/>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}